{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/game-log/game-log.component.html","webpack:///./src/app/component/game-log/game-log.component.scss","webpack:///./src/app/component/game-log/game-log.component.ts","webpack:///./src/app/component/live-mode/live-mode.component.html","webpack:///./src/app/component/live-mode/live-mode.component.scss","webpack:///./src/app/component/live-mode/live-mode.component.ts","webpack:///./src/app/component/statistics/statistics.component.html","webpack:///./src/app/component/statistics/statistics.component.scss","webpack:///./src/app/component/statistics/statistics.component.ts","webpack:///./src/app/component/strategy-analyser/data-form/data-form.component.html","webpack:///./src/app/component/strategy-analyser/data-form/data-form.component.scss","webpack:///./src/app/component/strategy-analyser/data-form/data-form.component.ts","webpack:///./src/app/component/strategy-analyser/game-form/game-form.component.html","webpack:///./src/app/component/strategy-analyser/game-form/game-form.component.scss","webpack:///./src/app/component/strategy-analyser/game-form/game-form.component.ts","webpack:///./src/app/component/strategy-analyser/game-list/game-list.component.html","webpack:///./src/app/component/strategy-analyser/game-list/game-list.component.scss","webpack:///./src/app/component/strategy-analyser/game-list/game-list.component.ts","webpack:///./src/app/component/strategy-analyser/strategy-form/strategy-form.component.html","webpack:///./src/app/component/strategy-analyser/strategy-form/strategy-form.component.scss","webpack:///./src/app/component/strategy-analyser/strategy-form/strategy-form.component.ts","webpack:///./src/app/data/data.model.ts","webpack:///./src/app/data/data.service.ts","webpack:///./src/app/game/game.model.ts","webpack:///./src/app/game/game.service.ts","webpack:///./src/app/strategy/strategy-simulator.ts","webpack:///./src/app/strategy/strategy.model.ts","webpack:///./src/app/strategy/strategy.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameFormComponent } from './component/strategy-analyser/game-form/game-form.component';\nimport { StatisticsComponent } from './component/statistics/statistics.component';\nimport { GameLogComponent } from './component/game-log/game-log.component';\nimport { LiveModeComponent } from './component/live-mode/live-mode.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/analyser', pathMatch: 'full' },\n  { path: 'analyser', component: GameFormComponent },\n  { path: 'statistics', component: StatisticsComponent },\n  { path: 'statistics/:id', component: StatisticsComponent },\n  { path: 'live', component: LiveModeComponent },\n  { path: 'log', component: GameLogComponent },\n  { path: 'log/:id', component: GameLogComponent },\n];\n\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule { }\n\n","module.exports = \"<mat-toolbar color=\\\"accent\\\">  \\n\\n  <mat-toolbar-row>\\n    <a mat-button routerLink=\\\"/analyser\\\">Strategy Analyser</a>\\n    <a mat-button routerLink=\\\"/statistics\\\"><span>Statistics</span></a>\\n    <a mat-button routerLink=\\\"/log\\\"><span>Game Log</span></a>\\n    <a mat-button routerLink=\\\"/live\\\"><span>Live Mode</span></a>\\n    \\n    <span style=\\\"flex: 1 1 auto;\\\"></span>\\n\\n    <a mat-button (click)=\\\"resetLocalStorage()\\\">reset</a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"content\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \".content {\\n  position: relative;\\n  margin: auto;\\n  max-width: 960px; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Roulette';\n\n  resetLocalStorage() {\n    localStorage.clear();\n    location.reload();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GameFormComponent } from './component/strategy-analyser/game-form/game-form.component';\nimport { DataFormComponent } from './component/strategy-analyser/data-form/data-form.component';\nimport { StrategyFormComponent } from './component/strategy-analyser/strategy-form/strategy-form.component';\n\nimport {  MatButtonModule,\n          MatFormFieldModule,\n          MatInputModule,\n          MatExpansionModule,\n          MatTableModule,\n          MatTabsModule,\n          MatToolbarModule,\n          MatSelectModule,\n          MatPaginatorModule} from '@angular/material';\nimport { GameListComponent } from './component/strategy-analyser/game-list/game-list.component';\nimport { StrategyService } from './strategy/strategy.service';\nimport { DataService } from './data/data.service';\nimport { GameService } from './game/game.service';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { StatisticsComponent } from './component/statistics/statistics.component';\nimport { GameLogComponent } from './component/game-log/game-log.component';\nimport { LiveModeComponent } from './component/live-mode/live-mode.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameFormComponent,\n    DataFormComponent,\n    StrategyFormComponent,\n    GameListComponent,\n    StatisticsComponent,\n    GameLogComponent,\n    LiveModeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatTabsModule,\n    AppRoutingModule,\n    MatSelectModule,\n    MatPaginatorModule,\n  ],\n  providers: [\n    StrategyService,\n    DataService,\n    GameService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-paginator [length]=\\\"logLength\\\"\\n               [pageSize]=\\\"pageSize\\\"\\n               [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n               [showFirstLastButtons]\\n               (page)=\\\"pageEvent = $event\\\">\\n</mat-paginator>\\n\\n<table mat-table [dataSource]=dataSource class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"number\\\">\\n    <th mat-header-cell *matHeaderCellDef> Number </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=[getColor(element.number)]> {{element.number}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"balance\\\">\\n    <th mat-header-cell *matHeaderCellDef> Balance </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.balance}} $</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"bets\\\">\\n    <th mat-header-cell *matHeaderCellDef> Placed Bets </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.toString() }} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"odd\\\">\\n    <th mat-header-cell *matHeaderCellDef> Odd </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\" > {{element.bets.odd }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"even\\\">\\n    <th mat-header-cell *matHeaderCellDef> Even </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.even }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"red\\\">\\n    <th mat-header-cell *matHeaderCellDef> Red </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.red }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"black\\\">\\n    <th mat-header-cell *matHeaderCellDef> Black </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.black }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"low\\\">\\n    <th mat-header-cell *matHeaderCellDef> Low </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.low }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"high\\\">\\n    <th mat-header-cell *matHeaderCellDef> high </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.high }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_1\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 1 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.dozen_1 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_2\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 2 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.dozen_2 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_3\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 3 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.dozen_3 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_1\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 1 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.column_1 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_2\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 2 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.column_2 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_3\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 3 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.column_3 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_01_06\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 1-6 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.transversale_01_06 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_07_12\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 7-12 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.transversale_07_12 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_13_18\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 13-18 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.transversale_13_18 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_19_24\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 19-24 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.transversale_19_24 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_25_30\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 24-30 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"'grey'\\\"> {{element.bets.transversale_25_30 }}  </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_31_36\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 31-36 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\" > {{element.bets.transversale_31_36 }}  </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<button (click)=\\\"backToTop()\\\" [ngClass]=\\\"'back-to-top'\\\" mat-button title=\\\"Go to top\\\">Back to top</button>\"","module.exports = \".mat-cell, .mat-header-cell {\\n  padding: 10px;\\n  text-align: center; }\\n\\n.mat-cell:first-child, .mat-header-cell:first-child {\\n  padding-right: 24px;\\n  font-size: 16px; }\\n\\n.back-to-top {\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px; }\\n\\ntable {\\n  margin: auto; }\\n\\n.green {\\n  background-color: green; }\\n\\n.red {\\n  background-color: red;\\n  font-weight: bold; }\\n\\n.black {\\n  background-color: black;\\n  color: white;\\n  font-weight: bold; }\\n\\n.grey {\\n  background-color: #f1f1f1; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PageEvent, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { DataModel } from '../../data/data.model';\nimport { GameService } from '../../game/game.service';\nimport { GameModel, LogEntryModel } from '../../game/game.model';\nimport { BET_TO_NUMBER } from '../../strategy/strategy.model';\n\n@Component({\n  selector: 'app-game-log',\n  templateUrl: './game-log.component.html',\n  styleUrls: ['./game-log.component.scss']\n})\nexport class GameLogComponent implements OnInit {\n\n  data: GameModel;\n  logLength;\n  dataSource;\n\n  // Table pagination options\n  displayedColumns = ['number', 'balance'];\n  length = 100;\n  pageSize = 100;\n  pageSizeOptions = [50, 100, 1000];\n  pageEvent: PageEvent;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  JSON;\n\n  constructor( private gameService: GameService, private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.JSON = JSON;\n    const dataId = +this.route.snapshot.paramMap.get('id');\n    if ( dataId ) {\n      this.data = this.gameService.getById(dataId);\n    } else {\n      this.data = this.gameService.lastActive;\n    }\n\n    if ( this.data ) {\n      this.gameService.processGame(this.data, true);\n      this.data.strategy.bets.forEach(bet => {\n        this.displayedColumns.push(bet);\n      });\n      this.dataSource = new MatTableDataSource<LogEntryModel>(this.data.log);\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  getColor(number: number) {\n    if (number === 0) {\n      return 'green';\n    }\n    if ( BET_TO_NUMBER.red.includes(number) ) {\n      return 'red';\n    }\n    return 'black';\n  }\n\n  backToTop() {\n    window.scrollTo(0, 0);\n  }\n\n}\n","module.exports = \"<mat-form-field>\\n  <mat-label>Number fallen:</mat-label>\\n  <input matInput [(ngModel)]=\\\"number\\\" placeholder=\\\"number\\\">\\n</mat-form-field>\\n<mat-form-field>\\n  <mat-select placeholder=\\\"Select Strategy\\\" [(ngModel)]=\\\"selectedStrategy\\\">\\n    <mat-option>None</mat-option>\\n    <mat-option *ngFor=\\\"let element of strategyList\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<p>\\n  Dummy: here will be\\n\\n  put 5 pieces on 1-6 and 2 pieces on 25-30\\n</p>\\n<p>\\n  A log of number, placed pieces and current balance\\n</p>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { StrategyModel } from '../../strategy/strategy.model';\nimport { StrategyService } from '../../strategy/strategy.service';\n\n@Component({\n  selector: 'app-live-mode',\n  templateUrl: './live-mode.component.html',\n  styleUrls: ['./live-mode.component.scss']\n})\nexport class LiveModeComponent implements OnInit {\n\n  number: string;\n  strategyList: StrategyModel[];\n  selectedStrategy: StrategyModel;\n\n  constructor(private strategyService: StrategyService) { }\n\n  ngOnInit() {\n    this.strategyList = this.strategyService.list;\n    this.strategyService.getLastActive().subscribe(strategy => this.selectedStrategy = strategy);\n  }\n\n}\n","module.exports = \"<div>\\n  <app-data-form></app-data-form>\\n\\n  \\n  <mat-form-field>\\n      <mat-select placeholder=\\\"Select Dataset\\\" [(ngModel)]=\\\"data\\\" (selectionChange)=\\\"changeDataUrl($event)\\\" >\\n        <mat-option>None</mat-option>\\n        <mat-option *ngFor=\\\"let element of dataList\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n      </mat-select>\\n  </mat-form-field> \\n  \\n\\n  <table mat-table *ngIf=\\\"data\\\" [dataSource]=[data] class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"odd\\\">\\n      <th mat-header-cell *matHeaderCellDef> Odd </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.odd < 100/2?'red':'green' ]\\\" > {{element.statistics.odd | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"even\\\">\\n      <th mat-header-cell *matHeaderCellDef> Even </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.even < 100/2?'red':'green' ]\\\"> {{element.statistics.even | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"red\\\">\\n      <th mat-header-cell *matHeaderCellDef> Red </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.red < 100/2?'red':'green' ]\\\"> {{element.statistics.red | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"black\\\">\\n      <th mat-header-cell *matHeaderCellDef> Black </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.black < 100/2?'red':'green' ]\\\"> {{element.statistics.black | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"low\\\">\\n      <th mat-header-cell *matHeaderCellDef> Low </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.low < 100/2?'red':'green' ]\\\"> {{element.statistics.low | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"high\\\">\\n      <th mat-header-cell *matHeaderCellDef> high </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.high < 100/2?'red':'green' ]\\\"> {{element.statistics.high | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"dozen_1\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dozen 1 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.dozen_1 < 100/3?'red':'green' ]\\\"> {{element.statistics.dozen_1 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"dozen_2\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dozen 2 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.dozen_2 < 100/3?'red':'green' ]\\\"> {{element.statistics.dozen_2 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"dozen_3\\\">\\n      <th mat-header-cell *matHeaderCellDef> Dozen 3 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.dozen_3 < 100/3?'red':'green' ]\\\"> {{element.statistics.dozen_3 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"column_1\\\">\\n      <th mat-header-cell *matHeaderCellDef> Column 1 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.column_1 < 100/3?'red':'green' ]\\\"> {{element.statistics.column_1 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"column_2\\\">\\n      <th mat-header-cell *matHeaderCellDef> Column 2 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.column_2 < 100/3?'red':'green' ]\\\"> {{element.statistics.column_2 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"column_3\\\">\\n      <th mat-header-cell *matHeaderCellDef> Column 3 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.column_3 < 100/3?'red':'green' ]\\\"> {{element.statistics.column_3 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <table mat-table *ngIf=\\\"data\\\" [dataSource]=[data] class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"transversale_01_06\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 1-6 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_01_06 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_01_06 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"transversale_07_12\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 7-12 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_07_12 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_07_12 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"transversale_13_18\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 13-18 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_13_18 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_13_18 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"transversale_19_24\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 19-24 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_19_24 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_19_24 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"transversale_25_30\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 24-30 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_25_30 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_25_30 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"transversale_31_36\\\">\\n      <th mat-header-cell *matHeaderCellDef> Transversale 31-36 </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"[ element.statistics.transversale_31_36 < 100/6?'red':'green' ]\\\"> {{element.statistics.transversale_31_36 | number:'1.0-2' }} % </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n  </table>\\n\\n  <div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"colorCanvas\\\" ></canvas>\\n    </div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"parityCanvas\\\" ></canvas>\\n    </div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"lowHeighCanvas\\\" ></canvas>\\n    </div>\\n  </div>\\n  <div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"dozenCanvas\\\" ></canvas>\\n    </div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"columnCanvas\\\" ></canvas>\\n    </div>\\n    <div style=\\\"width:400px;float:left;\\\">\\n      <canvas id=\\\"transversaleCanvas\\\" ></canvas>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".mat-cell, .mat-header-cell {\\n  padding: 10px;\\n  text-align: center; }\\n\\ntable, .mat-form-field {\\n  width: 900px;\\n  margin: 20px; }\\n\\n#canvas {\\n  width: 400px;\\n  height: 400px; }\\n\\n.red {\\n  background-color: red; }\\n\\n.green {\\n  background-color: green; }\\n\"","import { Component, OnInit, OnDestroy, AfterViewInit, OnChanges } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Chart from 'chart.js';\nimport { DataService } from '../../data/data.service';\nimport { Observable } from 'rxjs';\nimport { DataModel } from '../../data/data.model';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n  dataList$: Observable<DataModel[]>;\n  dataList: DataModel[];\n  data: DataModel;\n  colorPieChart;\n\n  displayedColumns = ['odd', 'even', 'red', 'black', 'low', 'high', 'dozen_1', 'dozen_2', 'dozen_3',\n                      'column_1', 'column_2', 'column_3', ];\n  displayedColumns2 = ['transversale_01_06', 'transversale_07_12', 'transversale_13_18', 'transversale_19_24',\n                      'transversale_25_30', 'transversale_31_36', ];\n\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit() {\n    this.dataList$ = this.dataService.getList();\n    this.dataList = this.dataService.list;\n    this.route.params.subscribe(\n      params => {\n        const id = +params['id'];\n        if ( isNaN(id)  ) {\n          this.data = this.dataService.lastActive;\n        } else {\n          this.data = this.dataService.getById(id);\n        }\n        this.createGraphs();\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    this.createGraphs();\n  }\n\n  changeDataUrl($event) {\n    const id = +_.get($event, 'value.id');\n    if (!isNaN(id)) {\n      this.router.navigateByUrl(`/statistics/${id}`);\n    }\n  }\n\n  createGraphs() {\n    if ( this.data ) {\n      const stats = this.data.getStatistics();\n      this.buildColorGraph(stats);\n      this.buildParityGraph(stats);\n      this.buildLowHeighGraph(stats);\n      this.buildDozenGraph(stats);\n      this.buildColumnGraph(stats);\n      this.buildTransversaleGraph(stats);\n    }\n  }\n\n  ngOnChanges() {\n    this.createGraphs();\n  }\n\n  ngOnDestroy(): void {\n    // TODO destroy chart objects\n  }\n\n  getSuccessBasedColor(percent, elements) {\n    if ( percent < 100 / elements ) {\n      return 'red';\n    }\n    return 'green';\n  }\n\n  buildColorGraph(stats) {\n    const data = {\n      labels: ['0', 'Red', 'Black'],\n      datasets: [{\n        data: [stats.numbers[0], stats.red, stats.black],\n        backgroundColor: ['rgba(75, 192, 192, 1)', this.getSuccessBasedColor(stats.red, 2), this.getSuccessBasedColor(stats.black, 2)],\n      }],\n      };\n    this.colorPieChart = new Chart('colorCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n\n  buildParityGraph(stats) {\n    const data = {\n      labels: ['0', 'Odd', 'Even'],\n      datasets: [{\n        data: [stats.numbers[0], stats.odd, stats.even],\n        backgroundColor: ['rgba(75, 192, 192, 1)',  this.getSuccessBasedColor(stats.odd, 2), this.getSuccessBasedColor(stats.even, 2)],\n      }],\n      };\n    this.colorPieChart = new Chart('parityCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n\n  buildLowHeighGraph(stats) {\n    const data = {\n      labels: ['0', 'Low', 'High'],\n      datasets: [{\n        data: [stats.numbers[0], stats.low, stats.high],\n        backgroundColor: ['rgba(75, 192, 192, 1)', this.getSuccessBasedColor(stats.low, 2), this.getSuccessBasedColor(stats.high, 2)],\n      }],\n      };\n    this.colorPieChart = new Chart('lowHeighCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n\n  buildDozenGraph(stats) {\n    const data = {\n      labels: ['0', 'First Dozen', 'Second Dozen', 'Third Dozen'],\n      datasets: [{\n        data: [stats.numbers[0], stats.dozen_1, stats.dozen_2, stats.dozen_3],\n        backgroundColor: ['rgba(75, 192, 192, 1)',  this.getSuccessBasedColor(stats.dozen_1, 3),\n                          this.getSuccessBasedColor(stats.dozen_2, 3), this.getSuccessBasedColor(stats.dozen_3, 3)],\n      }],\n      };\n    this.colorPieChart = new Chart('dozenCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n\n  buildColumnGraph(stats) {\n    const data = {\n      labels: ['0', 'First Column', 'Second Column', 'Third Column'],\n      datasets: [{\n        data: [stats.numbers[0], stats.column_1, stats.column_2, stats.column_3],\n        backgroundColor: ['rgba(75, 192, 192, 1)', this.getSuccessBasedColor(stats.column_1, 3),\n        this.getSuccessBasedColor(stats.column_2, 3), this.getSuccessBasedColor(stats.column_3, 3)],\n      }],\n      };\n    this.colorPieChart = new Chart('columnCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n\n  buildTransversaleGraph(stats) {\n    const data = {\n      labels: ['0', 'Transversale 1-6', 'Transversale 7-12', 'Transversale 13-18',\n               'Transversale 19-24', 'Transversale 25-30', 'Transversale 31-36'],\n      datasets: [{\n        data: [stats.numbers[0], stats.transversale_01_06, stats.transversale_07_12, stats.transversale_13_18,\n               stats.transversale_19_24, stats.transversale_25_30, stats.transversale_31_36],\n        backgroundColor: ['rgba(75, 192, 192, 1)', this.getSuccessBasedColor(stats.transversale_01_06, 6),\n                          this.getSuccessBasedColor(stats.transversale_07_12, 6), this.getSuccessBasedColor(stats.transversale_13_18, 6),\n                          this.getSuccessBasedColor(stats.transversale_19_24, 6), this.getSuccessBasedColor(stats.transversale_25_30, 6),\n                          this.getSuccessBasedColor(stats.transversale_31_36, 6)],\n      }],\n    };\n    this.colorPieChart = new Chart('transversaleCanvas', {\n      type: 'pie',\n      data,\n    });\n  }\n}\n","module.exports = \"<mat-expansion-panel [expanded]=\\\"true\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      Load Data\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Generate random numbers or upload via CSV file\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-form-field>\\n    <mat-label>Name:</mat-label>\\n    <input matInput [(ngModel)]=\\\"data.name\\\" placeholder=\\\"name\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Type:</mat-label>\\n    <mat-select placeholder=\\\"Select type of numbers\\\" [(ngModel)]=\\\"type\\\">\\n      <mat-option>None</mat-option>\\n      <mat-option *ngFor=\\\"let element of typeList\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"isRandom()\\\">\\n    <mat-label>Generate Numbers:</mat-label>\\n    <input matInput [(ngModel)]=\\\"count\\\" placeholder=\\\"count\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"1000000\\\" > \\n  </mat-form-field>\\n  <mat-form-field *ngIf=\\\"!isRandom()\\\" >\\n      <mat-label>Import Numbers:</mat-label>\\n      <textarea matInput placeholder=\\\"paste here\\\" [(ngModel)]=\\\"import\\\"></textarea>\\n    </mat-form-field>\\n  <button (click)=\\\"onClickCreateData()\\\" mat-button mat-raised-button matTooltip=\\\"Numbers will be read left to right, then bottom to top. So you can enter them in one row, multiple rows, but not in columns.\\\">Create Data</button>\\n</mat-expansion-panel>\"","module.exports = \".mat-expansion-panel {\\n  max-width: 900px;\\n  margin: 20px; }\\n\\n.mat-form-field {\\n  padding: 20px; }\\n\\n.mat-expansion-panel-header-title {\\n  font-weight: bold; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataModel, GameDataType } from '../../../data/data.model';\nimport { DataService } from '../../../data/data.service';\n\n@Component({\n  selector: 'app-data-form',\n  templateUrl: './data-form.component.html',\n  styleUrls: ['./data-form.component.scss']\n})\nexport class DataFormComponent implements OnInit {\n\n  data: DataModel;\n  count: number;\n  type: GameDataType;\n  typeList: GameDataType[];\n  import: string;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.data = Object.assign({}, this.dataService.lastActive);\n    this.count = this.data.numbers.length;\n    this.typeList = [GameDataType.random, GameDataType.csv];\n    this.type = this.data.type;\n  }\n\n  onClickCreateData() {\n    if ( !this.count || !this.type) {\n      console.warn('Error: nothing to generate');\n      return;\n    }\n    if (this.type === GameDataType.random) {\n      this.dataService.generateRandomData(this.count, this.data.name);\n    } else {\n      this.dataService.createFromCSV(this.import, this.data.name);\n    }\n  }\n\n  isRandom(): boolean {\n    return this.type === GameDataType.random;\n  }\n}\n","module.exports = \"\\n<app-data-form></app-data-form>\\n\\n<app-strategy-form></app-strategy-form>\\n<mat-expansion-panel [expanded]=\\\"true\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      Run Game\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Define a strategy by choosing on which numbers to bet, how long to wait until betting and how to long to progress until stopping.\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Select Dataset\\\" [(ngModel)]=\\\"selectedData\\\">\\n      <mat-option>None</mat-option>\\n      <mat-option *ngFor=\\\"let element of dataList\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Select Strategy\\\" [(ngModel)]=\\\"selectedStrategy\\\">\\n      <mat-option>None</mat-option>\\n      <mat-option *ngFor=\\\"let element of strategyList\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <button (click)=\\\"onClickPlayGame()\\\" mat-button>Play</button>\\n</mat-expansion-panel>\\n\\n<app-game-list class=\\\"app-game-list\\\"></app-game-list>\\n\"","module.exports = \".mat-tab-body-content {\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: row; }\\n\\n.app-game-list {\\n  max-width: 900px;\\n  width: 100%;\\n  flex: 0 0 100%; }\\n\\n.mat-expansion-panel {\\n  max-width: 900px;\\n  margin: 20px; }\\n\\n.mat-form-field {\\n  padding: 20px; }\\n\\n.mat-expansion-panel-header-title {\\n  font-weight: bold; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { GameModel } from '../../../game/game.model';\nimport { GameService } from '../../../game/game.service';\nimport { StrategyService } from '../../../strategy/strategy.service';\nimport { DataService } from '../../../data/data.service';\nimport { DataModel } from '../../../data/data.model';\nimport { StrategyModel } from '../../../strategy/strategy.model';\n\n@Component({\n  selector: 'app-game-form',\n  templateUrl: './game-form.component.html',\n  styleUrls: ['./game-form.component.scss']\n})\nexport class GameFormComponent implements OnInit {\n\n  game: GameModel;\n  dataList: DataModel[];\n  strategyList: StrategyModel[];\n  selectedData: DataModel;\n  selectedStrategy: StrategyModel;\n\n  constructor(  private gameService: GameService,\n                private strategyService: StrategyService,\n                private dataService: DataService ) { }\n\n  ngOnInit() {\n    this.dataList = this.dataService.list;\n    this.strategyList = this.strategyService.list;\n    this.dataService.getLastActive().subscribe(data => this.selectedData = data);\n    this.strategyService.getLastActive().subscribe(strategy => this.selectedStrategy = strategy);\n  }\n\n  onClickPlayGame() {\n    const newGame = new GameModel();\n    newGame.data = this.selectedData;\n    newGame.strategy = this.selectedStrategy;\n    this.gameService.add(newGame);\n  }\n}\n","module.exports = \"<table mat-table [dataSource]=gameList$ class=\\\"mat-elevation-z8\\\">\\n  <ng-container matColumnDef=\\\"data\\\">\\n    <th mat-header-cell *matHeaderCellDef> Data </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"strategy\\\">\\n    <th mat-header-cell *matHeaderCellDef> Strategy </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.strategy}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"minBalance\\\">\\n    <th mat-header-cell *matHeaderCellDef> Lowest Balance </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.minBalance}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"maxBalance\\\">\\n    <th mat-header-cell *matHeaderCellDef> Highest Balance </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.maxBalance}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"finalBalance\\\">\\n    <th mat-header-cell *matHeaderCellDef> Final Balance </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.finalBalance}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"played\\\">\\n    <th mat-header-cell *matHeaderCellDef> Played </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.played}} </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"statistics\\\">\\n    <th mat-header-cell *matHeaderCellDef>  </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <a routerLink=\\\"/statistics/{{element.data.id}}\\\"> Statistics </a></td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"log\\\">\\n    <th mat-header-cell *matHeaderCellDef>  </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <a routerLink=\\\"/log/{{element.id}}\\\"> Game Log</a></td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"odd\\\">\\n    <th mat-header-cell *matHeaderCellDef> Odd </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.odd | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"even\\\">\\n    <th mat-header-cell *matHeaderCellDef> Even </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.even | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"red\\\">\\n    <th mat-header-cell *matHeaderCellDef> Red </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.red | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"black\\\">\\n    <th mat-header-cell *matHeaderCellDef> Black </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.black | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"low\\\">\\n    <th mat-header-cell *matHeaderCellDef> Low </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.low | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"high\\\">\\n    <th mat-header-cell *matHeaderCellDef> high </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.high | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_1\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 1 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.dozen_1 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_2\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 2 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.dozen_2 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"dozen_3\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dozen 3 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.dozen_3 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_1\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 1 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.column_1 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_2\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 2 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.column_2 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"column_3\\\">\\n    <th mat-header-cell *matHeaderCellDef> Column 3 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.column_3 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_01_06\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 1-6 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_01_06 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_07_12\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 7-12 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_07_12 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_13_18\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 13-18 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_13_18 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_19_24\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 19-24 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_19_24 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_25_30\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 24-30 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_25_30 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"transversale_31_36\\\">\\n    <th mat-header-cell *matHeaderCellDef> Transversale 31-36 </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data.statistics.transversale_31_36 | number:'1.0-2' }} % </td>\\n  </ng-container>\\n  \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n \"","module.exports = \".mat-cell, .mat-header-cell {\\n  padding: 10px;\\n  text-align: center; }\\n\\n.mat-table {\\n  margin: 20px;\\n  width: 900px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GameModel } from '../../../game/game.model';\nimport { GameService } from '../../../game/game.service';\nimport { Observable } from 'rxjs';\nimport { DataSource } from '@angular/cdk/table';\n\n@Component({\n  selector: 'app-game-list',\n  templateUrl: './game-list.component.html',\n  styleUrls: ['./game-list.component.scss']\n})\nexport class GameListComponent implements OnInit {\n\n  gameList$;\n\n  displayedColumns = ['data', 'strategy', 'maxBalance', 'minBalance', 'finalBalance', 'played', 'statistics', 'log'];\n\n  constructor(private gameService: GameService) {}\n\n  ngOnInit() {\n    this.gameList$ = this.gameService.getList();\n  }\n\n}\n","module.exports = \"<mat-expansion-panel [expanded]=\\\"true\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      Strategy\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      Define a strategy by choosing on which numbers to bet, how long to wait until betting and how to long to progress until stopping.\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n\\n  <mat-form-field>\\n    <mat-label>Mode:</mat-label>\\n    <mat-select placeholder=\\\"Select type of numbers\\\" [(ngModel)]=\\\"strategy.mode\\\">\\n      <mat-option>None</mat-option>\\n      <mat-option *ngFor=\\\"let element of modes\\\" [value]=\\\"element\\\" >{{element}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Misses:</mat-label>\\n    <input matInput [(ngModel)]=\\\"strategy.misses\\\" placeholder=\\\"misses\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Stop-Loss Pieces:</mat-label>\\n    <input matInput [(ngModel)]=\\\"strategy.stopLoss\\\" placeholder=\\\"stopLoss\\\">\\n  </mat-form-field>\\n  <button (click)=\\\"onClickAddStrategy()\\\" mat-button>Add/Select Strategy</button>\\n</mat-expansion-panel>\"","module.exports = \".mat-expansion-panel {\\n  max-width: 900px;\\n  margin: 20px; }\\n\\n.mat-form-field {\\n  padding: 20px; }\\n\\n.mat-expansion-panel-header-title {\\n  font-weight: bold; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StrategyService } from '../../../strategy/strategy.service';\nimport { StrategyModel, StrategyMode } from '../../../strategy/strategy.model';\n\n@Component({\n  selector: 'app-strategy-form',\n  templateUrl: './strategy-form.component.html',\n  styleUrls: ['./strategy-form.component.scss']\n})\nexport class StrategyFormComponent implements OnInit {\n\n  strategy: StrategyModel;\n  modes: StrategyMode[];\n\n  constructor(private strategyService: StrategyService) { }\n\n  ngOnInit() {\n    this.strategy = Object.assign({}, this.strategyService.lastActive);\n    this.modes = [StrategyMode.COLOR, StrategyMode.COLUMN, StrategyMode.DOZEN,\n                  StrategyMode.LOW_HIGH, StrategyMode.PARITY, StrategyMode.TRANSVERSALE];\n\n  }\n\n  onClickAddStrategy() {\n    const {mode, misses, stopLoss} = this.strategy;\n    const newStrategy = new StrategyModel({mode, misses, stopLoss});\n    this.strategyService.add(newStrategy);\n  }\n}\n","import { BET_TO_NUMBER } from '../strategy/strategy.model';\n\nlet idCounter = 0;\n\nexport class DataModel {\n  timeCreated: Date;\n  id: number;\n  name: string;\n  type: GameDataType = GameDataType.random;\n  numbers: number[];\n  statistics?;\n  private isDirty: boolean;\n\n  constructor(model?: Partial<DataModel>) {\n    // timeCreated needs to be initialised with null, because undefined creates an invalid date\n    model = model || {timeCreated: null};\n    this.id = model.id || ++idCounter;\n    if ( this.id > idCounter ) {\n      idCounter = this.id;\n    }\n    this.timeCreated = new Date(model.timeCreated);\n    this.name = model.name || '';\n    this.statistics = model.statistics || {\n      numbers: {}\n    };\n    this.numbers = model.numbers || [];\n  }\n\n  equals(otherData: DataModel) {\n    if (!otherData) {\n      return false;\n    }\n    if (this.numbers === otherData.numbers) {\n      return true;\n    }\n    return false;\n  }\n\n  addNumber(number: number) {\n    this.isDirty = true;\n    this.numbers.push(number);\n  }\n\n  setNumbers(numbers: number[]) {\n    this.isDirty = true;\n    this.numbers = numbers;\n\n  }\n\n  getStatistics() {\n    if ( this.isDirty ) {\n      this.generateStatistics();\n    }\n    return this.statistics;\n  }\n\n  toString() {\n    return `${this.timeCreated.toLocaleTimeString()}-${this.name}`;\n  }\n\n  /**\n   * Currently is generating the statistics completely new. In general\n   * incremental update could make sense as well.\n   */\n  generateStatistics() {\n    this.statistics = { numbers: {}};\n    this.numbers.forEach( (number) => {\n      this.statistics.numbers[number] = ++this.statistics.numbers[number] || 1;\n      NUMBER_TO_BETS[number].forEach(bet => {\n        this.statistics[bet] = ++this.statistics[bet] || 1;\n      });\n    });\n    Object.keys(this.statistics).forEach( (bet) => {\n      if ( bet !== 'numbers' ) {\n        this.statistics[bet] = (this.statistics[bet] / this.numbers.length * 100).toFixed(2);\n      }\n    });\n    Object.keys(this.statistics.numbers).forEach( (bet) => {\n      this.statistics.numbers[bet] = (this.statistics.numbers[bet] / this.numbers.length * 100).toFixed(2);\n    });\n  }\n}\n\nexport enum GameDataType {\n  random = 'random',\n  csv = 'csv',\n}\n\n// will get initialized below\nexport const NUMBER_TO_BETS = {\n  0: [],\n};\n\n// initialize {NUMBER_TO_BETS} for 0-36\n// by looking them up in {BET_TO_NUMBER}\nfor (let index = 1; index < 37; index++) {\n  NUMBER_TO_BETS[index] = [];\n  Object.keys(BET_TO_NUMBER).forEach(element => {\n    if (BET_TO_NUMBER[element].includes(index)) {\n      NUMBER_TO_BETS[index].push(element);\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { DataModel } from './data.model';\nimport { Observer, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n\n  // Elements are added to the front of the array, this allows to get\n  // the lastActive at [0] and as well in the table the most recent are at the top\n  list: DataModel[] = [];\n  lastActive: DataModel;\n  lastActiveObservers: Set<Observer<DataModel>> = new Set();\n  lastActive$: Observable<DataModel> = new Observable((observer) => {\n    this.lastActiveObservers.add(observer);\n    observer.next(this.lastActive);\n    return {unsubscribe: () => this.lastActiveObservers.delete(observer)};\n  });\n  listObservers: Set<Observer<DataModel[]>> = new Set();\n  list$: Observable<DataModel[]> = new Observable((observer) => {\n    this.listObservers.add(observer);\n    observer.next(this.list);\n    return {unsubscribe: () => this.listObservers.delete(observer)};\n  });\n\n  constructor() {\n    const isDataLoaded = this.fromLocalStorage();\n    if ( ! isDataLoaded ) {\n      this.generateRandomData(1000, 'random-1000');\n    }\n  }\n\n  getList(): Observable<DataModel[]> {\n    return this.list$;\n  }\n\n  getById(id: number) {\n    return this.list.find( (element) => element.id === id);\n  }\n\n  getLastActive(): Observable<DataModel> {\n    return this.lastActive$;\n  }\n\n  toLocalStorage() {\n    localStorage.setItem('data', JSON.stringify(this.list));\n  }\n\n  /**\n   * return is data loaded from local storage\n   */\n  fromLocalStorage(): boolean {\n    const localData = localStorage.getItem('data');\n\n    const list = JSON.parse(localData);\n    if ( !list ) {\n      return false;\n    }\n    // add elements from highest to lowest, since [0] is the lastActive\n    for (let index = list.length - 1 ; index > -1 ; index--) {\n      this.add(new DataModel(list[index]));\n    }\n    return true;\n  }\n\n  /**\n   * TODO: do a shallow compare to prevent duplicates\n   * @param data\n   */\n  add(data: DataModel ): void {\n    const index = this.list.findIndex( e => e.equals(data) );\n    if (index !== -1) {\n      this.list.splice(index, 1);\n    }\n    this.list.unshift(data);\n    this.toLocalStorage();\n    this.lastActive = data;\n    this.listObservers.forEach((observer) => { observer.next(this.list); });\n    this.lastActiveObservers.forEach( (observer) => { observer.next(this.lastActive); });\n  }\n\n  private generateNumbers(count: number): number[] {\n    const numbers = [];\n    for (let index = 0; index < count; index++) {\n      numbers.push(Math.floor(Math.random() * 37));\n    }\n    return numbers;\n  }\n\n  /**\n   * Generates random data, adds it to the service.\n   * @param count number of random generated numbers\n   */\n  generateRandomData(count: number, name: string) {\n    const data = new DataModel();\n    data.name = name;\n    data.numbers = this.generateNumbers(count);\n    data.generateStatistics();\n    this.add(data);\n  }\n\n  createFromCSV(csvNumbers: string, name: string) {\n    if ( csvNumbers ) {\n      // tries to get the numbers in whatever format is passed\n      const processedNumbers = csvNumbers.replace(/[^\\d]+/g, ',') // clean all not number chars\n                              .replace(/^,|,$/g, '')\n                              .split(',') // create string array\n                              .map((el) => +el) // convert to number arra\n                              .filter((el) => (el < 37 && el > -1) ); // remove not valid roulette numbers\n      const data = new DataModel();\n      data.name = name;\n      data.numbers = processedNumbers;\n      data.generateStatistics();\n      this.add(data);\n    }\n  }\n}\n","import { DataModel } from '../data/data.model';\nimport { StrategyModel } from '../strategy/strategy.model';\n\nlet idCounter = 0;\n\nexport class GameModel {\n  id: number;\n  data?: DataModel;\n  strategy?: StrategyModel;\n  log?: LogEntryModel[]; // [numbers],einsatz, balance\n  minBalance: number;\n  maxBalance: number;\n  finalBalance: number;\n  played: number;\n\n  constructor(model?: Partial<GameModel>) {\n    model = model || {};\n    this.id = model.id || ++idCounter;\n    if ( this.id > idCounter ) {\n      idCounter = this.id;\n    }\n    this.data = model.data;\n    this.strategy = model.strategy;\n    this.minBalance = model.minBalance || 0;\n    this.maxBalance = model.maxBalance || 0;\n    this.finalBalance = model.finalBalance || 0;\n    this.played = model.played || 0;\n  }\n\n  equals(otherGame: GameModel): boolean {\n      if (!otherGame) {\n          return false;\n      }\n      if (this.data === otherGame.data && this.strategy === otherGame.strategy ) {\n          return true;\n      }\n      return false;\n  }\n\n  toString() {\n    return `${this.id}-${this.data}-${this.strategy}`;\n  }\n}\n\nexport class LogEntryModel {\n    bets: object;\n    balance: number;\n    number: number;\n\n    constructor() {\n      this.bets = {};\n      this.balance = 0;\n    }\n\n    toString() {\n      return JSON.stringify(this.bets);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { GameModel, LogEntryModel } from './game.model';\nimport { Observable, Observer } from 'rxjs';\nimport { StrategySimulator } from '../strategy/strategy-simulator';\nimport { DataService } from '../data/data.service';\nimport { StrategyService } from '../strategy/strategy.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n  // Elements are added to the front of the array, this allows to get\n  // the lastActive at [0] and as well in the table the most recent are at the top\n  list: GameModel[] = [];\n  lastActive: GameModel;\n  lastActiveObservers: Set<Observer<GameModel>> = new Set();\n  lastActive$: Observable<GameModel> = new Observable((observer) => {\n    this.lastActiveObservers.add(observer);\n    observer.next(this.lastActive);\n    return {unsubscribe: () => this.lastActiveObservers.delete(observer)};\n  });\n  listObservers: Set<Observer<GameModel[]>> = new Set();\n  list$: Observable<GameModel[]> = new Observable((observer) => {\n    this.listObservers.add(observer);\n    observer.next(this.list);\n    return {unsubscribe: () => this.listObservers.delete(observer)};\n  });\n\n  constructor(private dataService: DataService, private strategyService: StrategyService) {\n    // Will dependencies lead to the right initialization order?\n    // make sure this is initialized after the other services\n    // setTimeout( () => , 0);\n    this.fromLocalStorage();\n  }\n\n  getList(): Observable<GameModel[]> {\n    return this.list$;\n  }\n\n  getById(id: number) {\n    return this.list.find( (element) => element.id === id);\n  }\n\n  getLastActive(): Observable<GameModel> {\n    return this.lastActive$;\n  }\n\n  toLocalStorage() {\n    const localStorageList = this.list.map( element => {\n      const reducedElement: any = Object.assign({}, element);\n      reducedElement.data = reducedElement.data.id;\n      reducedElement.strategy = reducedElement.strategy.id;\n      delete reducedElement.log;\n      return reducedElement;\n    });\n    localStorage.setItem('game', JSON.stringify(localStorageList));\n  }\n\n  /**\n   * return is data loaded from local storage\n   */\n  fromLocalStorage(): boolean {\n    const localData = localStorage.getItem('game');\n\n    const list = JSON.parse(localData);\n    if ( !list ) {\n      return false;\n    }\n    // add elements from highest to lowest, since [0] is the lastActive\n    for (let index = list.length - 1 ; index > -1 ; index--) {\n      list[index].data = this.dataService.getById(list[index].data);\n      list[index].strategy = this.strategyService.getById(list[index].strategy);\n      if ( !list[index].data || !list[index].strategy ) {\n        console.log('BOOOM', list[index]);\n      }\n      this.add(new GameModel(list[index]));\n    }\n    return true;\n  }\n\n  /**\n   * TODO: do a shallow compare to prevent duplicates\n   * @param data\n   */\n  add(data: GameModel ): void {\n    this.processGame(data);\n    const index = this.list.findIndex( e => e.equals(data) );\n    if (index !== -1) {\n      this.list.splice(index, 1);\n    }\n    this.list.unshift(data);\n    this.toLocalStorage();\n    this.lastActive = data;\n    this.listObservers.forEach((observer) => { observer.next(this.list); });\n    this.lastActiveObservers.forEach( (observer) => { observer.next(this.lastActive); });\n  }\n\n  processGame(game: GameModel, log = false): void {\n    if ( !game && (!game.strategy || !game.data) ) {\n      console.warn('gameData is not populated');\n    }\n\n    if ( log ) {\n      game.log = [];\n    }\n    game.maxBalance = 0;\n    game.minBalance = 0;\n    game.finalBalance = 0;\n    game.played = 0;\n    // create a simulator for each bet\n    const simulators = [];\n    game.strategy.bets.forEach(bet => {\n      simulators.push(new StrategySimulator(game.strategy, bet));\n    });\n\n    let balanceSum = 0;\n    // enter one number a time to all simulators\n    game.data.numbers.forEach(number => {\n      let entry: LogEntryModel;\n      if ( log ) {\n        entry = new LogEntryModel();\n        entry.number = number;\n      }\n      balanceSum = 0;\n      simulators.forEach(simulator => {\n        if ( log ) {\n          if ( simulator.getNextBet() ) {\n            entry.bets[simulator.bet] = simulator.getNextBet();\n          }\n        }\n        simulator.roll(number);\n        balanceSum += simulator.getBalance();\n        if ( simulator.getNextBet() > 0 ) {\n          game.played++;\n        }\n      });\n\n      if ( balanceSum > game.maxBalance ) {\n        game.maxBalance = balanceSum;\n      }\n      if ( balanceSum < game.minBalance ) {\n        game.minBalance = balanceSum;\n      }\n      if ( log ) {\n        entry.balance = balanceSum;\n        game.log.push(entry);\n      }\n    });\n    game.finalBalance = balanceSum;\n\n  }\n}\n","import { StrategyModel, BET_TO_NUMBER } from './strategy.model';\n\n/**\n * TODO: return an observable from the strategy service, which returns\n * entries from here.\n */\nexport class StrategySimulator {\n\n  strategy: StrategyModel;\n\n  bet: string;\n  balance: number;\n  curMiss: number;\n  curLoss: number;\n  placeBet: number;\n  lastRoll: number;\n  betNumbers: number[];\n  winRatio: number;\n\n\n  constructor(strategy: StrategyModel, bet: string) {\n    this.strategy = strategy;\n    this.bet = bet;\n    this.betNumbers = BET_TO_NUMBER[bet] || [];\n    this.balance = 0;\n    this.curMiss =  0;\n    this.curLoss =  0;\n    this.placeBet =  0;\n    this.lastRoll =  0;\n    this.winRatio = ( 36 / this.betNumbers.length ) - 1;\n  }\n\n  getNextBet() {\n    return this.placeBet;\n  }\n\n  getBalance() {\n    return this.balance;\n  }\n\n  getWinRatio() {\n    return this.winRatio;\n  }\n\n  private resetStreak() {\n    this.curMiss = 0;\n    this.curLoss = 0;\n    this.placeBet = 0;\n  }\n\n  roll(number: number) {\n    this.lastRoll = number;\n    this.processBet();\n    this.updatePrediction();\n  }\n\n  private processBet() {\n    if ( this.betNumbers.includes(this.lastRoll) ) {\n      if ( this.placeBet ) {\n        this.balance += this.placeBet * this.winRatio;\n      }\n      this.resetStreak();\n    } else {\n      // on simple chances you get half the money back on a zero\n      if ( this.placeBet && this.lastRoll === 0 && this.winRatio === 1) {\n        this.balance -= (this.placeBet / 2);\n        this.curLoss += (this.placeBet / 2);\n      } else if ( this.placeBet ) {\n        this.balance -= this.placeBet;\n        this.curLoss += this.placeBet;\n      }\n      this.curMiss++;\n    }\n  }\n\n  private updatePrediction() {\n    if ( this.curMiss >= this.strategy.misses ) {\n      // do I need to raise the stake\n      if (this.needsProgression()) {\n        this.placeBet = Math.ceil(( this.curLoss + 1 ) / this.winRatio );\n      }\n      // would I exceed my progression limit?\n      if (this.curLoss + this.placeBet > this.strategy.stopLoss) {\n        this.resetStreak();\n      }\n    }\n    return true;\n  }\n\n  // it should win at least on piece\n  private needsProgression() {\n    return ( this.curLoss ) >= this.placeBet * this.winRatio;\n  }\n}\n\n","let idCounter = 0;\n\nexport class StrategyModel {\n  mode?: StrategyMode;\n  bets: string[];\n  misses: number;\n  stopLoss: number;\n  id: number;\n\n  constructor(model?: Partial<StrategyModel>) {\n    model = model || {};\n    this.id = model.id || ++idCounter;\n    if ( this.id > idCounter ) {\n      idCounter = this.id;\n    }\n    this.mode = model.mode || StrategyMode.TRANSVERSALE;\n    this.bets = model.bets || MODE_TO_BET[this.mode] || [];\n    this.misses = model.misses || 21;\n    this.stopLoss = model.stopLoss || 15;\n  }\n\n  equals(otherStrategy: StrategyModel) {\n    if (!otherStrategy) {\n      return false;\n    }\n    if (this.mode === otherStrategy.mode\n      && this.misses === otherStrategy.misses\n      && this.stopLoss === otherStrategy.stopLoss ) {\n      return true;\n    }\n    return false;\n  }\n\n  toString() {\n    return `${this.mode}-${this.misses}-${this.stopLoss}`;\n  }\n}\n\nexport enum StrategyMode {\n  TRANSVERSALE = 'Transversale Simple',\n  COLOR = 'Color',\n  PARITY = 'Parity',\n  SINGLE_NUMBER = 'Single Number',\n  DOZEN = 'Dozen',\n  COLUMN = 'Column',\n  LOW_HIGH = 'Low/High',\n}\n\nexport enum StrategyBet {\n  ODD = 'odd',\n  EVEN = 'even',\n  RED = 'red',\n  BLACK = 'black',\n  LOW = 'low',\n  HIGH = 'high',\n  DOZEN_1 = 'dozen_1',\n  DOZEN_2 = 'dozen_2',\n  DOZEN_3 = 'dozen_3',\n  COLUMN_1 = 'column_1',\n  COLUMN_2 = 'column_2',\n  COLUMN_3 = 'column_3',\n  TRANSVERSALE_01_06 = 'transversale_01_06',\n  TRANSVERSALE_07_12 = 'transversale_07_12',\n  TRANSVERSALE_13_18 = 'transversale_13_18',\n  TRANSVERSALE_19_24 = 'transversale_19_24',\n  TRANSVERSALE_25_30 = 'transversale_25_30',\n  TRANSVERSALE_31_36 = 'transversale_31_36',\n}\n\nexport const MODE_TO_BET = {\n    [ StrategyMode.PARITY ]: [ StrategyBet.ODD, StrategyBet.EVEN ],\n    [ StrategyMode.COLOR ]: [ StrategyBet.RED, StrategyBet.BLACK ],\n    [ StrategyMode.LOW_HIGH ]: [ StrategyBet.LOW, StrategyBet.HIGH ],\n    [ StrategyMode.DOZEN ]: [ StrategyBet.DOZEN_1, StrategyBet.DOZEN_2, StrategyBet.DOZEN_3 ],\n    [ StrategyMode.COLUMN ]: [ StrategyBet.COLUMN_1, StrategyBet.COLUMN_2, StrategyBet.COLUMN_3 ],\n    [ StrategyMode.TRANSVERSALE ]: [ StrategyBet.TRANSVERSALE_01_06, StrategyBet.TRANSVERSALE_07_12, StrategyBet.TRANSVERSALE_13_18,\n                                     StrategyBet.TRANSVERSALE_19_24, StrategyBet.TRANSVERSALE_25_30, StrategyBet.TRANSVERSALE_31_36 ],\n};\n\nexport const BET_TO_NUMBER = {\n  [StrategyBet.ODD] : [1, 3, 5, 7,  9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35],\n  [StrategyBet.EVEN] : [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36],\n\n  [StrategyBet.RED] : [1, 3, 5, 7,  9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\n  [StrategyBet.BLACK] : [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\n\n  [StrategyBet.LOW] : [ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n  [StrategyBet.HIGH] : [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n\n  [StrategyBet.DOZEN_1] : [ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12],\n  [StrategyBet.DOZEN_2] : [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],\n  [StrategyBet.DOZEN_3] : [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n\n  [StrategyBet.COLUMN_1] : [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35],\n  [StrategyBet.COLUMN_2] : [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34],\n  [StrategyBet.COLUMN_3] : [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],\n\n  [StrategyBet.TRANSVERSALE_01_06] : [1, 2, 3, 4, 5, 6],\n  [StrategyBet.TRANSVERSALE_07_12] : [7, 8, 9, 10, 11, 12],\n  [StrategyBet.TRANSVERSALE_13_18] : [13, 14, 15, 16, 17, 18],\n  [StrategyBet.TRANSVERSALE_19_24] : [19, 20, 21, 22, 23, 24],\n  [StrategyBet.TRANSVERSALE_25_30] : [25, 26, 27, 28, 29, 30],\n  [StrategyBet.TRANSVERSALE_31_36] : [31, 32, 33, 34, 35, 36],\n};\n","import { Injectable } from '@angular/core';\nimport { StrategyModel, StrategyMode } from './strategy.model';\nimport { Observer, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrategyService {\n\n  // Elements are added to the front of the array, this allows to get\n  // the lastActive at [0] and as well in the table the most recent are at the top\n  list: StrategyModel[] = [];\n  lastActive: StrategyModel;\n  lastActiveObservers: Set<Observer<StrategyModel>> = new Set();\n  lastActive$: Observable<StrategyModel> = new Observable((observer) => {\n    this.lastActiveObservers.add(observer);\n    observer.next(this.lastActive);\n    return {unsubscribe: () => this.lastActiveObservers.delete(observer)};\n  });\n  listObservers: Set<Observer<StrategyModel[]>> = new Set();\n  list$: Observable<StrategyModel[]> = new Observable((observer) => {\n    this.listObservers.add(observer);\n    observer.next(this.list);\n    return {unsubscribe: () => this.listObservers.delete(observer)};\n  });\n\n  constructor() {\n    const isDataLoaded = this.fromLocalStorage();\n    if ( ! isDataLoaded ) {\n      this.add(new StrategyModel());\n    }\n  }\n\n  getList(): Observable<StrategyModel[]> {\n    return this.list$;\n  }\n\n  getById(id: number) {\n    return this.list.find( (element) => element.id === id);\n  }\n\n  getLastActive(): Observable<StrategyModel> {\n    return this.lastActive$;\n  }\n\n  toLocalStorage() {\n    localStorage.setItem('strategy', JSON.stringify(this.list));\n  }\n\n  /**\n   * return is data loaded from local storage\n   */\n  fromLocalStorage(): boolean {\n    const localData = localStorage.getItem('strategy');\n\n    const list = JSON.parse(localData);\n    if ( !list ) {\n      return false;\n    }\n    // add elements from highest to lowest, since [0] is the lastActive\n    for (let index = list.length - 1 ; index > -1 ; index--) {\n      this.add(new StrategyModel(list[index]));\n    }\n    return true;\n  }\n\n  add(data: StrategyModel ): void {\n    const index = this.list.findIndex( e => e.equals(data) );\n    if (index !== -1) {\n      this.list.splice(index, 1);\n    }\n    this.list.unshift(data);\n    this.toLocalStorage();\n    this.lastActive = data;\n    this.listObservers.forEach((observer) => { observer.next(this.list); });\n    this.lastActiveObservers.forEach( (observer) => { observer.next(this.lastActive); });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}